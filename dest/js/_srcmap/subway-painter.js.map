{"version":3,"sources":["subway-painter.js"],"names":["subwayPainter","l","console","log","i","length","_l$i","l_xmlattr","uid","lb","loop","j","_p$j$p_xmlattr","p","p_xmlattr","x","y","st","ex","rc","isLb","dStr","lc","lbx","appendTo","attr","css","$","svg","html","addSvgClass","lby","split","repeatStr","_l$i2","path","_p$j$p_xmlattr2","rx","ry","d","trim","image","width","height","href","baseVal","imgSrc","cx","cy","r","includes","window","panZoom","svgPanZoom","zoomEnabled","controlIconsEnabled","fit"],"mappings":"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","file":"../subway-painter.js","sourcesContent":["//ex 换乘标志\r\n//rc 圆润拐弯\r\n//st 有效站点\r\n//iu 有效点?????\r\n// (function() {\r\n//     var script = document.createElement('script');\r\n//     script.src = \"http://cdn.bootcss.com/eruda/1.4.2/eruda.min.js\";\r\n//     document.body.appendChild(script);\r\n//     script.onload = function() { eruda.init() }\r\n// })();\r\nfunction subwayPainter(l) {\r\n    console.log(l)\r\n        //地铁线路\r\n    for (var i = 0; i < l.length; i++) {\r\n        console.log(i)\r\n        var { l_xmlattr, p } = l[i]\r\n        var { lb, loop, uid } = l_xmlattr\r\n        // if (!uid) { //暂未开通\r\n        //     break;\r\n        // }\r\n        var dStr = \"\"; //地铁线路点\r\n        var isLb = false; //是否圆润拐点\r\n        for (var j = 0; j < p.length; j++) {\r\n            var { x, y, lb, st, ex, rc } = p[j].p_xmlattr\r\n            if (isLb) {\r\n                isLb = false\r\n                dStr += x + \" \" + y + \" \"\r\n            } else {\r\n                if (rc) {\r\n                    isLb = true\r\n                    dStr += \"Q\" + x + \" \" + y + \" \"\r\n                } else {\r\n                    if (j == 0) {\r\n                        dStr += \"M\" + x + \" \" + y + \" \"\r\n                    } else {\r\n                        dStr += \"L\" + x + \" \" + y + \" \"\r\n                    }\r\n                    if (j == p.length - 1) {\r\n                        if (loop) {\r\n                            dStr += \"Z\"\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        var { lb, lc, lbx, lby } = l_xmlattr\r\n        var path = $.svg('path').appendTo('#g-box')\r\n        path.attr({\r\n            d: $.trim(dStr),\r\n            lb: lb\r\n        }).css(\"stroke\", \"#\" + lc.split(\"x\")[1]);\r\n        var text = $.svg('text').appendTo('#g-box').html(lb).addSvgClass(\"subway-name\")\r\n        text.attr({\r\n            x: lbx - 10,\r\n            y: lby + 15,\r\n        }).css(\"fill\", \"#\" + lc.split(\"x\")[1]);\r\n    }\r\n\r\n    var repeatStr = \"\" //uid字符串判断重复点\r\n    for (var i = 0; i < l.length; i++) {\r\n        var { l_xmlattr, p } = l[i]\r\n            // if (!l_xmlattr.uid) { //暂未开通\r\n            //     break;\r\n            // }\r\n        for (var j = 0; j < p.length; j++) {\r\n            var { x, y, rx, ry, lb, ex, rc, st, uid } = p[j].p_xmlattr\r\n            if (st) {\r\n                if (ex) {\r\n                    if (!repeatStr.includes(uid)) {\r\n                        var image = $.svg('image').appendTo('#g-box')\r\n                        image.attr({\r\n                            width: \"20\",\r\n                            height: \"20\",\r\n                            x: x - 10,\r\n                            y: y - 10\r\n                        });\r\n                        image[0].href.baseVal = imgSrc;\r\n                    }\r\n                } else {\r\n                    var circle = $.svg('circle').appendTo('#g-box')\r\n                    circle.attr({\r\n                        cx: x,\r\n                        cy: y,\r\n                        r: 4\r\n                    }).css(\"stroke\", \"#\" + l_xmlattr.lc.split(\"x\")[1]);\r\n                }\r\n                if (!repeatStr.includes(uid)) {\r\n                    var text = $.svg('text').appendTo('#g-box').html(lb).addSvgClass(\"station-name\")\r\n                    text.attr({\r\n                        x: x + rx + 2,\r\n                        y: y + ry + 12,\r\n                    });\r\n                    repeatStr += uid\r\n                }\r\n            }\r\n        }\r\n    }\r\n    window.panZoom = svgPanZoom('#mobile-svg', {\r\n        zoomEnabled: true,\r\n        controlIconsEnabled: false,\r\n        fit: 1,\r\n        center: 1,\r\n        customEventsHandler: eventsHandler\r\n    });\r\n}\r\n\r\n/**\r\n * 遇见问题及解决\r\n * 1.stroke color -->加“#”\r\n * 2.svg image标签路径赋值 -->image[0].href.baseVal = ;\r\n * 3.pc微信内置浏览器不显示-->es6兼容\r\n * 4.中转站存在text内容及image相同重叠问题 -->repeatStr.includs(uid)\r\n * \r\n */"]}